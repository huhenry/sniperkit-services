---
version: '2.1'

# version: '3'
# extra_hosts:
#  - "cassandra:${CASSANDRA_IP:-localhost}"
#  - "mysql:${MYSQL_IP:-localhost}"
#  - "mariadb:${MARIABD_IP:-localhost}"
#  - "reds:${REDIS_IP:-localhost}"
#  - "webdis:${WEBDIS_IP:-localhost}"
#  - "postgres:${POSTGRES_IP:-localhost}"
#  - "spark:${SPARK_IP:-localhost}"
#  - "hadoop:${HADOOP_IP:-localhost}"
#  - "neo4j:${NEO4J_IP:-localhost}"
#  - "celery:${CELERY_IP:-localhost}"

services:
  data:
    image: tianon/true
    volumes:

    - "./dockerfiles/etcd/shared/logs:/shared/logs/etcd"
    - "./dockerfiles/etcd/shared/data:/shared/data/etcd"

    - "./dockerfiles/krakend/shared/apps:/shared/apps"
    - "./dockerfiles/krakend/shared/conf.d:/etc/krakend"


    - "./dockerfiles/aiohttp/admin/shared/dicts:/shared/dicts"
    - "./dockerfiles/aiohttp/admin/shared/utils:/scripts/utils"

    - "./dockerfiles/aiohttp/admin/shared/apps:/shared/apps"
    - "./dockerfiles/aiohttp/admin/shared/logs:/shared/logs/aiohttp_admin"
    - "./dockerfiles/aiohttp/admin/shared/data:/shared/data/aiohttp_admin"

    - "./dockerfiles/aiohttp/admin/shared/conf.d:/shared/data/conf.d"


    - "./shared/fake_api:/lwan/wwwroot"
    - "./shared/dicts:/shared/dicts"
    - "./shared/ssl:/shared/ssl"
    - "./shared/www:/var/www"
    - "./shared/html:/var/www/html"
    - "./dockerfiles/mongodb/shared/logs:/shared/logs/mongodb"
    - "./dockerfiles/mongodb/shared/data:/shared/data/mongodb"
    - "./dockerfiles/mongodb/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/mariadb/shared/logs:/shared/logs/mariadb"
    - "./dockerfiles/mariadb/shared/data:/shared/data/mariadb"
    - "./dockerfiles/mariadb/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/mysql/shared/logs:/shared/logs/mysql"
    - "./dockerfiles/mysql/shared/data:/shared/data/mysql"
    - "./dockerfiles/mysql/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/postgres/shared/logs:/shared/logs/postgres"
    - "./dockerfiles/postgres/shared/data:/shared/data/postgres"
    - "./dockerfiles/postgres/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/redis/shared/logs:/shared/logs/redis"
    - "./dockerfiles/redis/shared/data:/shared/data/redis"
    - "./dockerfiles/redis/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/webdis/shared/logs:/shared/logs/webdis"
    - "./dockerfiles/webdis/shared/data:/shared/data/webdis"
    - "./dockerfiles/webdis/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/nodejs/shared/logs:/shared/logs/nodejs"
    - "./dockerfiles/nodejs/shared/data:/shared/data/nodejs"
    - "./dockerfiles/nodejs/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/sphinx/shared/logs:/shared/logs/sphinx"
    - "./dockerfiles/sphinx/shared/data:/shared/data/sphinx"
    - "./dockerfiles/sphinx/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/gitsome/shared/logs:/shared/logs/gitsome"
    - "./dockerfiles/gitsome/shared/data:/shared/data/gitsome"
    - "./dockerfiles/gitsome/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/sqlmap/shared/logs:/shared/logs/sqlmap"
    - "./dockerfiles/sqlmap/shared/data:/shared/data/sqlmap"
    - "./dockerfiles/sqlmap/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/setoolkit/shared/logs:/shared/logs/setoolkit"
    - "./dockerfiles/setoolkit/shared/data:/shared/data/setoolkit"
    - "./dockerfiles/setoolkit/shared/conf.d:/shared/data/conf.d"
    - "./dockerfiles/celery/shared/logs:/shared/logs/celery"
    - "./dockerfiles/celery/shared/data:/shared/data/celery"
    - "./dockerfiles/celery/shared/conf.d:/shared/data/conf.d"

  nginx:
    image: "${DOCKER_HUB_ACCOUNT}/nginx:1.11.3-alpine"
    container_name: nginx-1.11.3
    build:
      context: "./dockerfiles/nginx"
      dockerfile: nginx-1.11.3-alpine.dockerfile
    volumes_from:
    - data
    ports:
    - 80:80
    - 443:443
    links:
    - php
    - golang
    - nodejs

  etcd:
    image: "${DOCKER_HUB_ACCOUNT}/etcd:${ETCD_VERSION}-alpine3.6"
    build:
      context: "./dockerfiles/etcd"
      dockerfile: "etcd-alpine.dockerfile"
    container_name: "etcd-${ETCD_VERSION}"
    volumes_from:
    - data
    ports:
    - 2379:2379
    - 2380:2380
    expose:
    - 2379
    - 2380
    env_file:
    - "./dockerfiles/etcd/etcd.config.env"

  nodejs:
    image: "${DOCKER_HUB_ACCOUNT}/nodejs:${NODEJS_VERSION}-alpine3.6"
    build:
      context: "./dockerfiles/nodejs"
      dockerfile: "nodejs${NODEJS_VERSION}-alpine.dockerfile"
    container_name: "nodejs-${NODEJS_VERSION}"
    volumes_from:
    - data
    ports:
    - 8000:8000
    expose:
    - 8000
    links:
    - webdis
    - redis
    - postgres
    - mariadb
    - mysql
    - mongodb
    env_file:
    - "./dockerfiles/nodejs/nodejs.config.env"

  golang:
    image: "${DOCKER_HUB_ACCOUNT}/golang:${GOLANG_VERSION}-alpine3.6"
    build:
      context: "./dockerfiles/golang"
      dockerfile: "golang${GOLANG_VERSION}-alpine.dockerfile"
    container_name: "golang-${GOLANG_VERSION}"
    volumes_from:
    - data
    expose:
    - 9000
    links:
    - webdis
    - redis
    - postgres
    - mariadb
    - mysql
    - mongodb
    - sphinx
    env_file:
    - "./dockerfiles/golang/golang.config.env"

  php:
    image: "${DOCKER_HUB_ACCOUNT}/php-fpm:7.0-alpine3.6"
    build:
      context: "./dockerfiles/php"
      dockerfile: php-7.0-fpm-alpine.dockerfile
    container_name: php-7.0-fpm
    volumes_from:
    - data
    expose:
    - 9000
    links:
    - webdis
    - redis
    - postgres
    - mariadb
    - mysql
    - mongodb
    - sphinx
    env_file:
    - "./dockerfiles/php/php.config.env"

  postgres:
    image: "${DOCKER_HUB_ACCOUNT}/postgres:${POSTGRES_VERSION}-alpine3.6"
    build:
      context: "./dockerfiles/postgres"
      dockerfile: postgres${POSTGRES_VERSION}-alpine.dockerfile
    container_name: postgres-${POSTGRES_VERSION}
    ports:
    - 5432:5432
    expose:
    - 3306
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/postgres/postgres.config.env"

  krakend:
    image: "${DOCKER_HUB_ACCOUNT}/krakend:${KRAKEND_VERSION}-alpine3.6"
    container_name: krakend-${KRAKEND_VERSION}
    build:
      context: "./dockerfiles/krakend"
      dockerfile: krakend-alpine.dockerfile
    volumes_from:
    - data
    ports:
    - "4242:4242"
    links:
    - fake_api
    env_file:
    - "./dockerfiles/krakend/krakend.config.env"

  fake_api:
    image: jaxgeller/lwan
    volumes_from:
    - data
    ports:
    - "8002:8080"

  mysql:
    image: "${DOCKER_HUB_ACCOUNT}/mysql:${MYSQL_VERSION}-alpine3.6"
    build:
      context: "./dockerfiles/mysql"
      dockerfile: mysql${MYSQL_VERSION}-alpine.dockerfile
    container_name: mysql-${MYSQL_VERSION}
    ports:
    - 3306:3306
    expose:
    - 3306
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/mysql/mysql.config.env"

  mariadb:
    image: "${DOCKER_HUB_ACCOUNT}/mariadb:${MARIADB_VERSION}-alpine3.6"
    container_name: "mariadb-${MARIADB_VERSION}"
    build:
      context: "./dockerfiles/mariadb"
      dockerfile: "mariadb${MARIADB_VERSION}-alpine.dockerfile"
    ports:
    - 3307:3306
    expose:
    - 3307
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/mariadb/mariadb.config.env"

  celery:
    image: "${DOCKER_HUB_ACCOUNT}/celery:apk${CELERY_VERSION}-alpine3.6"
    container_name: "celery-${CELERY_VERSION}"
    build:
      context: "./dockerfiles/celery"
      dockerfile: celery-alpine.dockerfile
    entrypoint: "/opt/entrypoint.sh"
    env_file:
    - "./dockerfiles/celery/celery.config.env"
    volumes_from:
    - data
    links:
    - mysql
    - redis

  memcached:
    image: "${DOCKER_HUB_ACCOUNT}/memcached:${MEMCACHED_VERSION}-alpine3.6"
    container_name: memcached-${MEMCACHED_VERSION}
    build:
      context: "./dockerfiles/memcached"
      dockerfile: memcached-alpine.dockerfile
    ports:
      - 11211:11211
    expose:
    - 11211
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/memcached/memcached.config.env"

  neo4j:
    container_name: neo4j
    #image: neo4j:3.2
    image: "${DOCKER_HUB_ACCOUNT}/neo4j:${NEO4J_VERSION}-alpine3.6"
    build:
      context: "./dockerfiles/neo4j"
      dockerfile: neo4j-alpine.dockerfile
    ports:
      - 7474:7474
      - 7687:7687
      - 7473:7473
    expose:
    - 7474
    - 7687
    - 7473
    volumes_from:
    - data
    # - ./vms/neo4j/data:/data
    # - ./vms/neo4j/logs:/logs
    # - ./vms/neo4j/conf:/conf
    env_file:
    - "./dockerfiles/neo4j/neo4j.config.env"

  aiohttp_admin:
    image: "${DOCKER_HUB_ACCOUNT}/aiohttp_admin:py3.6-alpine3.6"
    container_name: aiohttp-admin
    build:
      context: "./dockerfiles/aiohttp/admin"
      dockerfile: aiohttp_admin-alpine.dockerfile
    command: dev
    ports:
    - 9001:9001
    expose:
    - 9001
    depends_on:
    - webdis
    - redis
    - postgres
    - mysql
    - mongodb
    links:
    - webdis
    - redis
    - postgres
    - mysql
    - mongodb
    volumes_from:
    - data
    volumes:
    - "./dockerfiles/aiohttp/admin/shared/apps:/shared/apps"
    - "./dockerfiles/aiohttp/admin/shared/logs:/shared/logs/aiohttp_admin"
    - "./dockerfiles/aiohttp/admin/shared/data:/shared/data/aiohttp_admin"
    - "./dockerfiles/aiohttp/admin/shared/conf.d:/shared/data/conf.d"
    env_file:
    - "./dockerfiles/aiohttp/admin/aiohttp_admin.config.env"

  mongodb:
    image: "${DOCKER_HUB_ACCOUNT}/mongo:${MONGODB_VERSION}-alpine3.6"
    container_name: "mongodb-${MONGODB_VERSION}"
    build:
      context: "./dockerfiles/mongodb"
      dockerfile: mongodb-alpine.dockerfile
    ports:
    - 27017:27017
    - 27018:27018
    - 27019:27019
    - 28017:28017
    expose:
    - 27017
    - 27018
    - 27019
    - 28017
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/mongodb/mongodb.config.env"
    entrypoint:
    - mongod
    command:
    - "--smallfiles"
    - "--dbpath"
    - "/shared/data/mongodb"

  gitsome:
    image: "${DOCKER_HUB_ACCOUNT}/gitsome:${GITSOME_VERSION}-py3.5-alpine3.4"
    container_name: "gitsome-${GITSOME_VERSION}"
    build:
      context: "./dockerfiles/gitsome"
      dockerfile: gitsome-alpine.dockerfile
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/gitsome/gitsome.config.env"
    command:
    - dev

  searx:
    image: ${DOCKER_HUB_ACCOUNT}/searx:latest-alpine3.6
    container_name: searx
    build:
      context: "./dockerfiles/searx"
      dockerfile: "searx-alpine.dockerfile"
    ports:
    - 8888:8888
    - 8889:8889
    expose:
    - 8888
    - 8889
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/searx/searx.config.env"
    command:
    - dev

  redis:
    image: "${DOCKER_HUB_ACCOUNT}/redis:${REDIS_VERSION}-alpine3.6"
    container_name: redis-${REDIS_VERSION}
    build:
      context: "./dockerfiles/redis"
      dockerfile: redis${REDIS_VERSION}-alpine.dockerfile
    ports:
    - 6379:6379
    expose:
    - 6379
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/redis/redis.config.env"

  webdis:
    image: "${DOCKER_HUB_ACCOUNT}/webdis:latest-${WEBDIS_VERSION}-alpine3.6"
    container_name: webdis-${WEBDIS_VERSION}
    build:
      context: "./dockerfiles/webdis"
      dockerfile: webdis-alpine.dockerfile
    ports:
    - 7379:7379
    expose:
    - 7379
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/webdis/webdis.config.env"

  sphinx:
    image: "${DOCKER_HUB_ACCOUNT}/sphinx:${SPHINX_VERSION}-alpine3.6"
    container_name: sphinx-${SPHINX_VERSION}
    build:
      context: "./dockerfiles/sphinx"
      dockerfile: sphinx-alpine.dockerfile
    volumes_from:
    - data
    links:
    - mariadb
    - mysql
    - postgres
    depends_on:
    - mariadb
    - mysql
    - postgres
    ports:
    - 9306:9306
    expose:
    - 9306
    env_file:
    - "./dockerfiles/sphinx/sphinx.config.env"

  gogs:
    image: bhuisgen/alpine-gogs
    build:
      context: "./dockerfiles/gogs"
      dockerfile: gogs-alpine.dockerfile
    ports:
      - "3000:3000"
      - "2222:22"
    volumes_from:
    - data
    volumes:
      - /etc/localtime:/etc/localtime:ro
    #    #- /srv/data:/var/lib/gogs
    env_file:
    - "./dockerfiles/gogs/gogs.config.env"

  setoolkit:
    image: "${DOCKER_HUB_ACCOUNT}/setoolkit:${SETOOLKIT_VERSION}-py${SETOOLKIT_PY_VERSION}-alpine3.6"
    container_name: "setoolkit-${SETOOLKIT_VERSION}"
    build:
      context: "./dockerfiles/setoolkit"
      dockerfile: setoolkit-alpine.dockerfile
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/setoolkit/setoolkit.config.env"

  sqlmap:
    image: "${DOCKER_HUB_ACCOUNT}/sqlmap:${SQLMAP_VERSION}-py${SQLMAP_PY_VERSION}-alpine3.6"
    container_name: sqlmap-${SQLMAP_VERSION}
    build:
      context: "./dockerfiles/sqlmap"
      dockerfile: sqlmap-alpine.dockerfile
    volumes_from:
    - data
    env_file:
    - "./dockerfiles/sqlmap/sqlmap.config.env"
